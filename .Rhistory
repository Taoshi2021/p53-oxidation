lims(x=c(-200, 200), y = c(-100, 100)) +
scale_color_manual(values = cbPalette) +
theme_bw()
g
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(x=c(-200, 200), y = c(-100, 150)) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(x=c(-300, 300, by= 100), y = c(-300, 350, by=100)) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(x=c(-300, 300),  by= 100, y = c(-300,300), by=100 ) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(x=c(-300, 300, by=100), y = c(-300,300, by=100 )) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(x=c(-300, 300), y = c(-300,300)) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
tiff(file = 'plots/pca.tiff', units = 'in', height = 3, width = 5, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
dev.off()
tiff(file = 'plots/pca.tiff', units = 'in', height = 2, width = 5, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
dev.off()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(y=c(-300, 300, by = 100)) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
lims(y=c(-300, 300), by = 100) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
ylim(y=c(-300, 300), by = 100) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
ylim= c(-300, 300, by = 100) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
ylim = c(-300, 300, by = 100) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = -PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
matrix<- assays(SE)[['lfq']]
matrix<- log2(matrix)
matrix[is.na(matrix)] <- 0
colnames(matrix) <- colData(SE)[, 'sample_id']
t(matrix) # transpose a matrix or data.frame
pca <- prcomp(t(matrix))
# pca$dim1 captures the direction where the most variation is
fviz_eig(pca) # "ggblot2" based published ready
fviz_pca_ind (pca, axes = c(1, 2), repel = TRUE, col.ind = "cos2")
plotDf <- as.data.frame(pca$x)
plotDf$condition <- colData(SE)[,'condition']
plotDf$condition<- factor(plotDf$condition, levels = c('WT', 'WT_Dia', 'C182SC277S_Dia', 'C182S_Dia'))
tiff(file = 'plots/pca.tiff', units = 'in', height = 3, width = 5, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
ylim= c()
theme_bw()
dev.off()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
tiff(file = 'plots/pca.tiff', units = 'in', height = 3, width = 5, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
dev.off()
tiff(file = 'plots/pca.tiff', units = 'in', height = 3, width = 4, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
dev.off()
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
View(plotDf)
View(matrix)
tiff(file = 'plots/pca.tiff', units = 'in', height = 4, width = 4, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
dev.off()
tiff(file = 'plots/pca.tiff', units = 'in', height = 3, width = 5, res = 300)
ggplot(data = plotDf) +
geom_point(aes(x = PC1, y = PC2, color = condition), size = 3) +
scale_color_manual(values = cbPalette) +
theme_bw()
dev.off()
sum(rowData(SE)$Peptides < 3)
hist(rowData(SE)$Peptides,xlim = c(0, 30), breaks = 100)
which(rowData(SE)$Peptides > 2)
SE <-SE[which(rowData(SE)$Peptides > 2), ]
nrow(SE)
sum(rowData(SE)$Peptides < 2)
sum(rowData(SE)$Peptides < 2)
hist(rowData(SE)$Peptides,xlim = c(0, 30), breaks = 100)
which(rowData(SE)$Peptides > 2)
SE <-SE[which(rowData(SE)$Peptides > 2), ]
nrow(SE)
save(SE, file = 'rdata/SE.RData')
load('rdata/SE.RData')
nrow(SE)
assays(SE)[['lfq_log']] <- log2(assays(SE)[['lfq']])
plotDf <- data.frame ( lfq_log = as.vector (assays(SE)[['lfq_log']]),
condition = rep(colData(SE)$condition, each = nrow(SE)),
sample = rep(colData(SE)$sample_id, each = nrow(SE)),
Gene.names = rep(rowData(SE)$Gene.names, 4))
# as. vector(): converts a distributed matrix into a non-distributed vector
# as.factor (): converts a variable into a factor, but preserves variable and value label attributes
# as.vector to correspond to condition and sample
plotDf$condition<- factor(plotDf$condition, levels= c('WT', 'WT_Dia', 'C182SC277S_Dia', 'C182S_Dia'))
plotDf$sample<- factor(plotDf$sample, levels= c('WT.1', 'WT.2', 'WT.3', 'WT.4',
'WT_Dia.1','WT_Dia.2', 'WT_Dia.3', 'WT_Dia.4',
'C182SC277S_Dia.1','C182SC277S_Dia.2', 'C182SC277S_Dia.3', 'C182SC277S_Dia.4',
'C182S_Dia.1', 'C182S_Dia.2', 'C182S_Dia.3', 'C182S_Dia.4'))
tiff(file ='plots/boxplot.tiff', units = 'in', height = 3, width = 5, res =300)
ggplot(data = plotDf) +
geom_boxplot(aes(x = sample, y = lfq_log, fill = condition)) +
scale_x_discrete(labels= rep(c('R1','R2', 'R3','R4'), 4)) +
scale_fill_manual(values = cbPalette) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, size = 11, hjust = 1)) +
labs(x = NULL, y='Log2(LFQ)')
dev.off()
load('rdata/SE.RData')
require(proDA)
# a function to imputate missing data; it infers each protein the coeficients that best explain the observed data and the associated uncertainly
assays(SE)[['lfq_log']] <- log2(assays(SE)[['lfq']])
mat <- assays(SE)[['lfq_log']]
colnames(mat) <- colData(SE)$sample_id
rownames(mat) <- rowData(SE)$Gene.names
fit <- proDA(mat, design = colData(SE)$condition, verbose = TRUE) # after log2 transformed
save (fit, file = 'rdata/proDA_fit.RData')
require(SummarizedExperiment)
require(ggplot2)
require(gplots)
require(ggrepel)
require(proDA)
require(biomaRt)
require(philentropy)
require(UpSetR)
require(plotly)
load('rdata/SE.RData')
load ('rdata/proDA_fit.RData')
# compare wt -wt_dia
diff_df_dia <- test_diff(fit,  `WT`- `WT_Dia` )
diff_df_dia$Gene.names <- rowData(SE)$Gene.names
length(which(diff_df_dia$diff <  -1 & diff_df_dia$adj_pval < 0.01 ))
assays(SE)[['lfq_log']] <- log2(assays(SE)[['lfq']])
diff_df_dia$n_obs_wt <- apply(assays(SE)[['lfq_log']][, c(1:4)], 1, function (x) sum (!is.na(x)))
diff_df_dia$n_obs_wtdia <- apply(assays(SE)[['lfq_log']][, c(5:8)], 1, function(x) sum(!is.na(x)))
# show diamide-induced p53 binding partners
```{r}
# differences between WT treated with diamide and without
sig_dia = filter(diff_df_dia,((diff< -1 | diff > 1) & adj_pval< 0.01))
write.csv (sig_dia, file="results/sig_dia.csv" )
sig_dia_only = filter(sig_dia, ( diff<  -1 & adj_pval< 0.01))
write.csv(sig_dia_only, file= "results/sig_dia_only.csv")
# differences between WT treated with diamide and without
sig_dia = filter(diff_df_dia,((diff< -1 | diff > 1) & adj_pval< 0.01))
write.csv (sig_dia, file="results/sig_dia.csv" )
sig_dia_only = filter(sig_dia, ( diff<  -1 & adj_pval< 0.01))
write.csv(sig_dia_only, file= "results/sig_dia_only.csv")
ggplot( ) +
geom_hline(yintercept = 2, color = 'red', linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), color = 'grey', linetype= 'dashed') +
geom_point(data= diff_df_dia, aes(x = -diff, y = -log10(adj_pval)), color="grey", size= 0.5) +
geom_point(data= sig_dia, aes(x = -diff, y = -log10(adj_pval)), color="black", size = 0.5)   +
theme_bw () +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = 'Log2(WT_Dia/WT)', y = '-Log10(adjusted p-value)')
# show Volcano plot
# add significant hints
tiff (file= 'plots/model.tiff', units="in", width =3, height=3, res= 300)
ggplot( ) +
geom_hline(yintercept = 2, color = 'red', linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), color = 'grey', linetype= 'dashed') +
geom_point(data= diff_df_dia, aes(x = -diff, y = -log10(adj_pval)), color="grey", size= 0.5) +
geom_point(data= sig_dia, aes(x = -diff, y = -log10(adj_pval)), color="black", size = 0.5)   +
theme_bw () +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = 'Log2(WT_Dia/WT)', y = '-Log10(adjusted p-value)')
dev.off()
spec <- c(grep('PRDX1', diff_df_dia$Gene.names),
grep('PRDX2', diff_df_dia$Gene.names),
grep('PRDX6', diff_df_dia$Gene.names),
grep('TXN',  diff_df_dia$Gene.names),
grep('TP53',  diff_df_dia$Gene.names),
grep('MDM2', diff_df_dia$Gene.names),
grep('YWHA', diff_df_dia$Gene.names),
grep("PSME3",diff_df_dia$Gene.names))
diff_dia_names <- diff_df_dia[spec,]
write.csv(diff_dia_names, file='results/diff_dia_names.csv', row.names = FALSE)
diff_dia_names2 <- read.csv(file='results/diff_dia_names2.csv')
ggplot( ) +
geom_hline(yintercept = 2, color = 'red', linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), color = 'grey', linetype= 'dashed') +
geom_point(data= diff_df_dia, aes(x = -diff, y = -log10(adj_pval)), color="grey", size= 0.5) +
geom_point(data= sig_dia, aes(x = -diff, y = -log10(adj_pval)), color="black", size = 0.5)   +
theme_bw () +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = 'Log2(WT_Dia/WT)', y = '-Log10(adjusted p-value)')+
geom_point(data= diff_dia_names2, aes(x = -diff, y = -log10(adj_pval)), color="red", size=0.5)+
geom_text_repel(data= diff_dia_names2, aes(x = -diff, y = -log10(adj_pval), label= Gene.names), size = 1.5, color="red")
# final figures
tiff (file= 'plots/WT_dia vs WT.tiff', units="in", width =3, height=3, res= 300)
ggplot( ) +
geom_hline(yintercept = 2, color = 'red', linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), color = 'grey', linetype= 'dashed') +
geom_point(data= diff_df_dia, aes(x = -diff, y = -log10(adj_pval)), color="grey", size= 0.5) +
geom_point(data= sig_dia, aes(x = -diff, y = -log10(adj_pval)), color="black", size = 0.5)   +
theme_bw () +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x = 'Log2(WT_Dia/WT)', y = '-Log10(adjusted p-value)')+
geom_point(data= diff_dia_names2, aes(x = -diff, y = -log10(adj_pval)), color="red", size=0.5)+
geom_text_repel(data= diff_dia_names2, aes(x = -diff, y = -log10(adj_pval), label= Gene.names), size = 1.5, color="red")
dev.off()
diff_df_w8 <- test_diff (fit, `WT_Dia` - `C182S_Dia`)
diff_df_w8$Gene.names<- rowData(SE)$Gene.names
assays(SE)[['lfq_log']] <- log2(assays(SE)[['lfq']])
diff_df_w8$n_obs_wt <- apply(assays(SE)[['lfq_log']][,c(5:8)], 1, function(x) sum(is.na(x)))
diff_df_w8$n_obs_C182S <- apply(assays(SE)[['lfq_log']][,c(12:16)], 1, function(x) sum(is.na(x)))
write.csv (diff_df_w8, file ='results/diff_df_w8.csv', row.names = FALSE)
diff_df_w8 <- read.csv("results/diff_df_w8.csv")
# Volcano plot
# names
spec <- grep('TP53', diff_df_w8$Gene.names)
diff_w8_names <- diff_df_w8[spec, ]
write.csv (diff_w8_names, file ='results/diff_w8_names.csv', row.names =  FALSE)
diff_w8_names2<- read.csv('results/diff_w8_names2.csv')
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_w8, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(WT_Dia/C182S_Dia)', y='-Log10(adjusted p-value)')+
scale_y_continuous(limits=c(0,10), breaks = seq(0, 10, 3)) + # to define breaks, which overrides lims argument
geom_text_repel(data=diff_w8_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), size= 2, color = 'red')+
geom_point(data=diff_w8_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 )
# To omit repetitive names
# final plot
tiff(file= 'plots/WT_Dia vs C182S_Dia.tiff', units="in", width =3, height=3, res=300)
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_w8, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(WT_Dia/C182S_Dia)', y='-Log10(adjusted p-value)')+
scale_y_continuous(limits=c(0,10), breaks = seq(0, 10, 3)) + # to define breaks, which overrides lims argument
geom_text_repel(data=diff_w8_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), size= 2, color = 'red')+
geom_point(data=diff_w8_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 )
dev.off()
diff_df_wm2 <- test_diff(fit, `WT_Dia` - `C182SC277S_Dia`)
diff_df_wm2$Gene.names <- rowData(SE)$Gene.names
diff_df_wm2$n_obs_wt <- apply(assays(SE)[['lfq_log']][,c(5:8)], 1, function(x) sum(is.na(x)))
diff_df_wm2$n_obs_C182SC277S <- apply(assays(SE)[['lfq_log']][,c(8:12)], 1, function(x) sum(is.na(x)))
# significant hints
sig_wm2 = filter(diff_df_wm2, (diff_df_wm2$diff < -1 | diff_df_wm2$diff > 1) & diff_df_wm2$adj_pval < 0.01 )
write.csv (sig_wm2, file ='results/sig_wm2.csv', row.names =  FALSE)
sig_wm2_only <- sig_wm2[which(sig_wm2$diff > 1), ]
write.csv(sig_wm2_only, file = 'results/sig_wm2_only.csv')
# names
spec <-  c(grep('PRDX', diff_df_wm2$Gene.names),
grep('TXN',  diff_df_wm2$Gene.names),
grep('MDM2', diff_df_wm2$Gene.names),
grep('TP53', diff_df_wm2$Gene.names),
grep('YWHA', diff_df_wm2$Gene.names),
grep('USP', diff_df_wm2$Gene.names),
grep("PSME3", diff_df_wm2$Gene.names))
diff_wm2_names <- diff_df_wm2[spec, ]
write.csv (diff_wm2_names, file ='results/diff_wm2_names.csv', row.names =  FALSE)
diff_wm2_names2<- read.csv(file='results/diff_wm2_names2.csv')
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_wm2, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(WT_Dia/C182SC277S_Dia)', y='-Log10(adjusted p-value)')+
geom_point(data= sig_wm2, aes(x= diff, y= -log10(adj_pval)), color = 'black', size=0.5) +
geom_point(data=diff_wm2_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 ) +
geom_text_repel(data=diff_wm2_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), color= "red", size= 2)
diff_wm2_names2<- read.csv(file='results/diff_wm2_names2.csv')
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_wm2, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(WT_Dia/C182SC277S_Dia)', y='-Log10(adjusted p-value)')+
geom_point(data= sig_wm2, aes(x= diff, y= -log10(adj_pval)), color = 'black', size=0.5) +
geom_point(data=diff_wm2_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 ) +
geom_text_repel(data=diff_wm2_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), color= "red", size= 2)
# To omit repetitive names
# final plot
tiff(file= 'plots/WT_Dia vs C182S&C277S_Dia.tiff', units="in", width =3, height=3, res=300, compression = 'lzw')
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_wm2, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(WT_Dia/C182SC277S_Dia)', y='-Log10(adjusted p-value)')+
geom_point(data= sig_wm2, aes(x= diff, y= -log10(adj_pval)), color = 'black', size=0.5) +
geom_point(data=diff_wm2_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 ) +
geom_text_repel(data=diff_wm2_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), color= "red", size= 2)
dev.off()
diff_df_m12 <- test_diff(fit, `C182S_Dia` - `C182SC277S_Dia`)
diff_df_m12$Gene.names <- rowData(SE)$Gene.names
diff_df_m12$n_obs_C182S <- apply(assays(SE)[['lfq_log']][,c(12:16)], 1, function(x) sum(is.na(x)))
diff_df_m12$n_obs_C182SC277S <- apply(assays(SE)[['lfq_log']][,c(8:12)], 1, function(x) sum(is.na(x)))
# significant hints
sig_m12 = filter(diff_df_m12, (diff_df_m12$diff < -1 | diff_df_m12$diff > 1) & diff_df_m12$adj_pval < 0.01 )
write.csv(sig_m12, file = 'results/sig_m12.csv')
sig_C277 <- sig_m12[which(sig_m12$diff>1), ]
write.csv(sig_C277, file = 'results/sig_C277.csv')
spec <-  c(grep('PRDX', diff_df_m12$Gene.names),
grep('TXN',  diff_df_m12$Gene.names),
grep('MDM2', diff_df_m12$Gene.names),
grep('TP53', diff_df_m12$Gene.names),
grep('YWHA', diff_df_m12$Gene.names),
grep('PSME3', diff_df_m12$Gene.names))
sig_C277_names <- diff_df_m12[spec, ]
write.csv (sig_C277_names, file ='results/sig_C277_names.csv', row.names =  FALSE)
sig_C277_names2<- read.csv(file='results/sig_C277_names2.csv')
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_m12, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(C182S_Dia/C182SC277S_Dia)', y='-Log10(adjusted p-value)')+
geom_point(data= sig_C277, aes(x= diff, y= -log10(adj_pval)), color = 'black', size=0.5) +
geom_point(data=sig_C277_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 ) +
geom_text_repel(data=sig_C277_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), color= "red", size= 2)
tiff(file= 'plots/C182S_Dia vs C182SC277S_Dia.tiff', units="in", width =3, height=3, res=300)
ggplot() +
geom_hline(yintercept = 2, color ="red", linetype = 'dashed')+
geom_vline(xintercept = c(-1,1), color = 'grey', linetype = 'dashed')+
geom_point(data= diff_df_m12, aes(x= diff, y= -log10(adj_pval)), color = 'grey', size= 0.5 )+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(x='Log2(C182S_Dia/C182SC277S_Dia)', y='-Log10(adjusted p-value)')+
geom_point(data= sig_C277, aes(x= diff, y= -log10(adj_pval)), color = 'black', size=0.5) +
geom_point(data=sig_C277_names2, aes(x=diff, y = -log10(adj_pval)), color ="red", size = 0.5 ) +
geom_text_repel(data=sig_C277_names2, aes(x=diff, y = -log10(adj_pval), label= Gene.names), color= "red", size= 2)
dev.off()
require(UpSetR)
require(VennDiagram)
sig_dia_only <- read.csv("results/sig_dia_only.csv")
sig_wm2_only <- read.csv("results/sig_wm2_only.csv")
sig_C277 <- read.csv("results/sig_C277.csv")
name_list <- list(Dia_dep = sig_dia_only$Gene.names,
C182C277_dep = sig_wm2_only$Gene.names,
C277_dep= sig_C277$Gene.names)
col_1<- c ("#56B4E9", "#009E73","#F0E442","#E69F00",'#D55E00',"#0072B2","#CC79A7")
col_2<- c("#56B4E9", "#009E73","#F0E442")
upset(data = fromList (name_list),
nsets = 3, set_size.numbers_size = TRUE,
sets.bar.color = col_2, main.bar.color = col_1)
tiff(file= 'plots/overlap.tiff', units="in", width =5, height=5, res=300)
upset(data = fromList (name_list),
nsets = 3, set_size.numbers_size = TRUE,
sets.bar.color = col_2, main.bar.color = col_1)
dev.off()
spe_names<- calculate.overlap(name_list)
spe_names$a1 <- as.character(spe_names$a1)
dia_dep<- c ( spe_names$a5, spe_names$a2, spe_names$a4, spe_names$a1) # rep (NA, 175 - length(spe_names$a1)))
C182C277_dep<- c (spe_names$a5, spe_names$a2,
rep(NA, 162-36))
C277_dep<- c (spe_names$a5,
rep(NA, 162-19) )
sum_names <- data.frame(dia_dep, C182C277_dep,C277_dep)
write.csv (sum_names, file ='results/Cys_sum_names.csv')
require(Hmisc)
# YWHAQ(14-3-3 protein)
lfq <- log2(assays(SE)[['lfq']])
YW <- lfq[which(rowData(SE)$Gene.names == 'YWHAQ'), ]
# rownames should be unique
condition<- colData(SE)$condition
YW_data<- data.frame (YW, condition )
YW_data$id <- rep(c(1:4), each=4)
YW_data$condition<- factor(YW_data$condition, levels =c('WT', 'WT_Dia', 'C182SC277S_Dia','C182S_Dia'))
col_colors <- c('#E69F00','#56B4E9',"#009E73", "#F0E442")
names(col_colors) <- unique(colData(SE)[,'condition'])
mycol<- col_colors[match(YW_data[,'condition'], names(col_colors))]
factor(mycol)
set.seed(0)
ggplot (data = YW_data)  +
geom_boxplot (data = YW_data, aes (x = condition, y=YW), outlier.shape = NA) +
geom_jitter(data=YW_data, aes(x= condition, y= YW, color = condition),
show.legend = FALSE) +
scale_color_manual(values=mycol) +
labs(y = 'Log2(LFQ)') +
ggtitle( 'YWHAQ') +
theme_bw () +
theme(#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.x.top = element_text(size=11),
axis.title.y = element_text(size=12),
axis.text.x.bottom = element_text(angle = 45, vjust = 0.5, size = 11))+
lims(y= c(24, 32)) +
scale_x_discrete(labels = c('wt'='WT', 'wt_dia'='WT_Dia', '1mut_dia'='C182S_Dia', '2mut_dia'='C182SC227S_Dia'))
tiff (file= 'plots/YWHAQ.tiff', units="in", width =4, height=4, res= 300)
set.seed(0)
ggplot (data = YW_data)  +
geom_boxplot (data = YW_data, aes (x = condition, y=YW), outlier.shape = NA) +
geom_jitter(data=YW_data, aes(x= condition, y= YW, color = condition),
show.legend = FALSE) +
scale_color_manual(values=mycol) +
labs(y = 'Log2(LFQ)') +
ggtitle( 'YWHAQ') +
theme_bw () +
theme(#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.x.top = element_text(size=11),
axis.title.y = element_text(size=12),
axis.text.x.bottom = element_text(angle = 45, vjust = 0.5, size = 11))+
lims(y= c(24, 32)) +
scale_x_discrete(labels = c('wt'='WT', 'wt_dia'='WT_Dia', '1mut_dia'='C182S_Dia', '2mut_dia'='C182SC227S_Dia'))
dev.off( )
# TP53BP1 (p53BP1 protein)
assays(SE)[['lfq_log']] <- log2(assays(SE)[['lfq']])
lfq <- assays(SE)[['lfq_log']]
bp1 <- lfq[which(rowData(SE)$Gene.names == 'TP53BP1'), ]
# rownames should be unique
condition<- colData(SE)$condition
bp1_data<- data.frame (bp1, condition)
is.na(bp1_data$bp1) # to test NA value
bp1_data$bp1[is.na(bp1_data$bp1)]<- 20  # imputate the NA value with 0
bp1_data$condition<- factor(bp1_data$condition, levels =c('WT', 'WT_Dia', 'C182SC277S_Dia', 'C182S_Dia'))
tiff (file= 'plots/TP53BP1.tiff', units="in", width =4, height=4, res= 300)
set.seed(0)
ggplot (data=bp1_data, aes(x= condition, y=bp1)) +
geom_boxplot (data = bp1_data, aes (x= condition, y=bp1), outlier.shape = NA)+
geom_jitter(aes(color = condition),show.legend = FALSE, width = 0.2) +
scale_color_manual(values=mycol) +
labs(y= 'Log2(LFQ)') +
ggtitle( 'TP53BP1') +
#axis(x, labels = c('wt', 'wt_dia','C182S_dia', 'C182S&C277S_dia' ))+
theme_bw () +
theme(#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.x.top = element_text(size=11),
axis.title.y = element_text(size=12),
axis.text.x.bottom = element_text(angle = 45, vjust = 0.5, size = 11)) +
#lims(y= c(0, 32))
scale_x_discrete (labels=c("wt" ='WT', "wt_dia"='WT_Dia', '1mut_dia'='C182S_Dia', '2mut_dia'='C182SC277S_Dia'))
dev.off( )
